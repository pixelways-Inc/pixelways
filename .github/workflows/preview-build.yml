name: Preview Build and Deploy

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'Name of the temporary repository'
        required: true
      commit_sha:
        description: 'SHA of the commit to build'
        required: true
      project_type:
        description: 'Type of project (react-vite, next, static)'
        required: true
        type: choice
        options:
          - react-vite
          - next
          - static

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_name }}
        ref: ${{ github.event.inputs.commit_sha }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js (for build projects)
      if: contains(fromJSON('["react-vite", "next", "node"]'), github.event.inputs.project_type)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies and build (React + Vite)
      if: github.event.inputs.project_type == 'react-vite'
      run: |
        npm ci
        npm run build

    - name: Install dependencies and build (Next.js)
      if: github.event.inputs.project_type == 'next'
      run: |
        npm ci
        npm run build
        npm run export

    - name: Upload to Supabase Storage
      run: |
        # Install Supabase CLI
        npm install -g @supabase/cli

        # Determine the directory to upload based on project type
        BUILD_DIR="."
        if [ "${{ github.event.inputs.project_type }}" == "react-vite" ]; then
          BUILD_DIR="dist"
        elif [ "${{ github.event.inputs.project_type }}" == "next" ]; then
          BUILD_DIR="out"
        fi

        # Validate build directory exists
        if [ ! -d "$BUILD_DIR" ]; then
          echo "Error: Build directory '$BUILD_DIR' does not exist"
          exit 1
        fi

        # Authenticate with Supabase
        echo "$SUPABASE_ACCESS_TOKEN" | supabase login --token

        # Upload to Supabase Storage
        echo "Uploading $BUILD_DIR to supabase://sites/${{ github.event.inputs.repo_name }}/"
        supabase storage cp --recursive $BUILD_DIR supabase://sites/${{ github.event.inputs.repo_name }}/
        
        if [ $? -eq 0 ]; then
          echo "Upload completed successfully"
        else
          echo "Upload failed"
          exit 1
        fi
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}

    - name: Notify Build Status
      if: always()
      run: |
        BUILD_STATUS="success"
        if [ "${{ job.status }}" == "failure" ]; then
          BUILD_STATUS="failed"
        fi

        curl -X POST \
             -H "Content-Type: application/json" \
             -d "{\"status\": \"${BUILD_STATUS}\", \"site\": \"${{ github.event.inputs.repo_name }}\"}" \
             ${{ secrets.BUILD_WEBHOOK_URL }}

    - name: Cleanup temporary repository
      if: always()
      run: |
        curl -X DELETE \
             -H "Authorization: token ${{ secrets.REPO_CLEANUP_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repo_name }}"
